/*Given an array arr[] and an integer K where K is smaller than size of array, the task is to find the Kth smallest element in the given array. It is given that all 
array elements are distinct.
nput:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given 
array is 7.
Example 2:

Input:
N = 5
arr[] = 7 10 4 20 15
K = 4
Output : 15
Explanation :
4th smallest element in the given 
array is 15.
Your Task:
You don't have to read input or print anything. Your task is to complete the function kthSmallest() which takes the array arr[], integers l and r denoting the starting and ending index of the array and an integer K as input and returns the Kth smallest element.
 
 
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)
Constraints:
1 <= N <= 105
1 <= arr[i] <= 105
1 <= K <= N
*/
void sortarray(int arr[] , int size)
    {
       int i = 0 ;
       while(i<size-1)
       {
           int min = arr[i];
           int min_index = i ;
           for(int j = 1 ; j<size-1 ; j++)
           {
               if(arr[j]<min)
               {
                   min = arr[j];
                   min_index = j ;
               }
           }
           int temp = arr[i];
           arr[i] = arr[min_index];
           arr[min_index] = temp;
           i++;
       }
    }
    int kthSmallest(int arr[], int l, int r, int k) {
      int size = r+1;
      sortarray(arr , size);
      return arr[k-1];
    }
